{{ if .Values.postgres.enabled }}
apiVersion: apps/v1
kind: {{ if .Values.postgres.pvc.enabled }} "StatefulSet" {{ else }} "Deployment" {{ end }}
metadata:
  name: postgres
  namespace: {{ .Release.Namespace }}
  annotations:
    checksum/supersetenv: {{ include "chart.supersetenv" . | sha256sum }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 12 }}
      {{- end }}
      containers:
        - name: postgres
          image: {{.Values.postgres.image}}:{{.Values.postgres.tag}}
          imagePullPolicy: Always
          ports:
            - containerPort: {{ .Values.postgres.config.postgres_port }}
          envFrom:
            - configMapRef:
                name: postgres
          resources:
{{- .Values.postgres.resources | toYaml | nindent 12 }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.postgres.config.postgres_port }}
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: {{ .Values.postgres.config.postgres_port }}
            initialDelaySeconds: 5
            periodSeconds: 5
      {{- if .Values.postgres.pvc.enabled }}
          volumeMounts:
            - mountPath: {{.Values.postgres.config.pg_data_directory}}
              name: "postgres"
  volumeClaimTemplates:
    - metadata:
        name: postgres
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.postgres.pvc.size }}
  serviceName: postgres
{{- end }}
{{- end }}